import org.asciidoctor.gradle.AsciidoctorTask

// // gradle build script for the arc42 template
// ("plain" subproject, creating the templage without help text)
//
// free software - without guarantee, use at your own risk
// ========================================================

// set subproject build directory
def localBuildDir = globalBuildDir.path+project.name-'src_gen'
def localImageDir = localBuildDir + "/images"

apply plugin: 'asciidoctor'

// common settings  
tasks.withType(AsciidoctorTask) { docTask ->  
    outputDir = new File( localBuildDir )
    sourceDocumentName = project.file('./src/arc42-template.adoc')
    sourceDir = project.file('./src')
    options = [  
        logDocuments: true,  
        attributes: [  
            toc         : 'left',
            doctype     : 'book',
            icons       : 'font',
            sectlink    : true,
            sectanchors : true,
            numbered    : true,
            imagesdir   : 'images',
        ]  
    ]  
}

task generateHTML (
    type: AsciidoctorTask, 
    description: 'use html5 as asciidoc backend') {  
    backend = 'html5'  
}

task generateDocbook (
    type: AsciidoctorTask, 
    description: 'use docbook as asciidoc backend') {  
    backend = 'docbook'  
}

defaultTasks 'arc42'

task copyImages(
    type: Copy,
    description: 'copy images into build output folder so that references can be resolved '
) {
    from '../../images'
    into localImageDir
}

task convert2Docx (
    dependsOn: [ generateDocbook ],
    type: Exec
) {
    //commandLine "pandoc -r arc42-template.xml -o arc42-template.docx "
    executable = "pandoc"
    args = ['-r','docbook',
            '-t','docx',
            '-o',localBuildDir+'/arc42-template.docx',
            localBuildDir+'/arc42-template.xml']
    println args
 }

task arc42(
    dependsOn: [copyImages, generateHTML, convert2Docx],
    description: 'collects all required tasks for creating arc42 documentation'
) << {
  println "globalBuildDir = ${globalBuildDir}"
  println "localBuildDir = ${localBuildDir}"
}
