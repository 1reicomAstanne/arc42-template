// snipplet of build-script to export EA diagrams

// by rdmueller... needs refactoring and integration into multi-project build

defaultTasks 'arc42'

// copyImages delegated to submodules
//task copyImages( ...


// copyResources shall be delegated to another build script
//task copyResources(
//    type: Copy,
//    description: 'copy (downloadable) resources and artifacts to resource folder'
//) {
//    from 'src/resources'
//    into './build/docs/resources'
//}


task streamingExecute(
    dependsOn: [],
    description: 'extends the String class with a better .executeCmd'
) << {
    //I need a streaming execute in order to export from EA
    String.metaClass.executeCmd = {
        //make sure that all paramters are interpreted through the cmd-shell
        //TODO: make this also work with *nix
        def p = "cmd /c ${delegate.value}".execute()
        def result=[std:'',err:'']
        def ready = false
        Thread.start{
            def reader = new BufferedReader(new InputStreamReader(p.in))
            def line = ""
            while ((line = reader.readLine()) != null) {
                println ""+line
                result.std+=line+"\n"
            }
            ready=true
            reader.close()
        }
        p.waitForOrKill(30000)
        def error = p.err.text
        if (error.isEmpty()) {
            return result
        } else {
            throw new RuntimeException("\n"+error)
        }
    }
}
task exportEA(
    dependsOn: [streamingExecute],
    description: 'exports all diagrams and some texts from EA files'
) << {
    new File('build/asciidoc/.').mkdirs()
    //execute through cscript in order to make sure that we get WScript.echo right
    "%SystemRoot%\\System32\\cscript.exe //nologo src/scripts/exportEAP.vbs".executeCmd()
    //the VB Script is only capable of writing ASCII-Files.
    //we now have to convert them to UTF-8
    new File('build/asciidoc/.').eachFileRecurse { file ->
    	file.write(file.getText('iso-8859-1'),'utf-8')
    }
}
task arc42(
    dependsOn: [copyResources, copyImages, asciidoctor],
    description: 'collects all required tasks for creating arc42 documentation'
) << { }

task arc42withEA(
    dependsOn: [copyResources, copyImages, exportEA, asciidoctor],
    description: 'same as arc42 but exports diagrams from EA before building arc42 docs'
) << { }

asciidoctor.mustRunAfter exportEA
